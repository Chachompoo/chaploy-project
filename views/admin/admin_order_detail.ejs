<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Order <%= String(order.id).padStart(4, '0') %> - Chaploy Admin</title>

  <!-- üåø ‡∏ü‡πâ‡∏≠‡∏ô‡∏ï‡πå‡∏ô‡∏∏‡πà‡∏° ‡πÜ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô -->
  <link href="https://fonts.googleapis.com/css2?family=Geologica:wght@400;500;600&family=Quicksand:wght@400;500;600&display=swap" rel="stylesheet">

  <link rel="stylesheet" href="/stylesheets/admin.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body class="admin-order-detail">
  <%- include('../partials/admin_navbar') %>

  <div class="order-detail-container">
    <h2>Order <%= String(order.id).padStart(4, '0') %></h2>

    <!-- üßç Customer Info -->
    <div class="customer-info">
      <p><strong>Customer:</strong> <%= order.firstname || '' %> <%= order.lastname || '' %></p>
      <p><strong>Email:</strong> <%= order.email %></p>
      <p><strong>Phone:</strong> <%= order.phone %></p>
      <p><strong>Address:</strong> <%= order.shipping_address %></p>
      <p><strong>Payment Status:</strong> <%= order.payment_status %></p>
      <p><strong>Order Status:</strong> <%= order.display_status %></p>
    </div>

    <!-- üì¶ Items -->
    <h3 class="section-title">Order Items</h3>
    <table class="order-items">
      <thead>
        <tr>
          <th>Product</th>
          <th>Qty</th>
          <th>Price</th>
          <th>Subtotal</th>
        </tr>
      </thead>
      <tbody>
        <% items.forEach(it => { %>
          <tr>
            <td><%= it.name %></td>
            <td><%= it.quantity %></td>
            <td>‡∏ø<%= Number(it.price_each || 0).toFixed(2) %></td>
            <td>‡∏ø<%= Number(it.subtotal || 0).toFixed(2) %></td>
          </tr>
        <% }) %>
      </tbody>
    </table>

    <div class="order-total">
      <p><strong>Total:</strong> ‡∏ø<%= Number(order.total || 0).toFixed(2) %></p>
    </div>

    <% if (order.slip_image) { %>
      <div class="payment-slip">
        <h3 class="section-title">Payment Slip</h3>
        <img src="<%= order.slip_image %>" alt="Slip">
      </div>
    <% } %>

    <!-- ================================
         ‚úÖ Update / Cancel Order Section
    ================================= -->
    <% if (order.order_status === 'cancelled') { %>
      <!-- ‚ùå ‡∏ñ‡πâ‡∏≤‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß -->
      <div class="cancelled-box">
        <p class="cancelled-text"><strong>Status:</strong> <%= order.display_status %></p>
        <p class="cancelled-note">This order has been cancelled and can no longer be modified.</p>
      </div>
    <% } else { %>
      <!-- üü¢ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏° -->
      <form id="updateForm" class="update-form">
        <label for="status">Update Order Status:</label>
        <select id="status" name="status">
          <option value="pending" <%= order.order_status === 'pending' ? 'selected' : '' %>>Pending</option>
          <option value="confirmed" <%= order.order_status === 'confirmed' ? 'selected' : '' %>>Confirmed</option>
          <option value="shipped" <%= order.order_status === 'shipped' ? 'selected' : '' %>>Shipped</option>
          <option value="delivered" <%= order.order_status === 'delivered' ? 'selected' : '' %>>Delivered</option>
        </select>

        <div class="button-group">
          <button type="submit" class="btn-update">Update</button>
          <button type="button" class="btn-cancel" onclick="cancelOrder(<%= order.id %>)">Cancel Order</button>
        </div>
      </form>
    <% } %>
  </div>

  <script>
    // ================================
    // ‚úÖ Update Order Status
    // ================================
    const updateForm = document.querySelector('#updateForm');
    if (updateForm) {
      updateForm.addEventListener('submit', e => {
        e.preventDefault();
        const status = document.querySelector('#status').value;
        fetch('/admin/orders/update/<%= order.id %>', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ status })
        })
        .then(r => r.json())
        .then(data => {
          if (data.success) {
            Swal.fire('‚úÖ Updated!', 'Order status updated successfully.', 'success')
              .then(() => location.reload());
          } else {
            Swal.fire('Error', 'Update failed.', 'error');
          }
        });
      });
    }

    // ================================
    // ‚úÖ Cancel Order + Send Email (Fixed)
    // ================================
    async function cancelOrder(orderId) {
      const { value: formValues } = await Swal.fire({
        title: 'Cancel Order',
        html: `
          <select id="reason" class="swal2-input">
            <option value="">Select reason</option>
            <option value="Out of stock">Out of stock</option>
            <option value="Invalid payment">Invalid payment</option>
            <option value="Incorrect address">Incorrect address</option>
          </select>
          <textarea id="note" class="swal2-textarea" placeholder="Additional details (optional)"></textarea>
        `,
        showCancelButton: true,
        confirmButtonText: 'Send Email',
        cancelButtonText: 'Back',
        confirmButtonColor: '#379e76',
        cancelButtonColor: '#c53b3b',
        background: '#f9f9f5',
        color: '#2e4d39',
        preConfirm: () => {
          const reason = document.getElementById('reason').value;
          const note = document.getElementById('note').value;
          if (!reason) {
            Swal.showValidationMessage('Please select a reason.');
          }
          return { reason, note };
        }
      });

      if (!formValues) return;

      // üåø ‡πÅ‡∏™‡∏î‡∏á popup ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á
      Swal.fire({
        title: 'Sending Email...',
        text: 'Please wait while we notify the customer.',
        allowOutsideClick: false,
        didOpen: () => Swal.showLoading(),
      });

      try {
        const res = await fetch(`/admin/orders/cancel/${orderId}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(formValues)
        });

        const text = await res.text();
        console.log('üì¶ Raw response:', text);

        let data;
        try {
          data = JSON.parse(text);
        } catch (err) {
          console.warn('‚ö†Ô∏è Not valid JSON, fallback mode');
          data = { success: res.ok, message: text };
        }

        Swal.close(); // ‡∏õ‡∏¥‡∏î popup loading

        Swal.fire({
          icon: data.success ? 'success' : 'error',
          title: data.success ? 'Email Sent!' : 'Email Failed',
          text: data.message || (data.success ? 'Order cancelled successfully.' : 'Unable to send cancellation email.'),
          confirmButtonColor: '#379e76'
        }).then(() => {
          if (data.success) location.reload();
        });

      } catch (err) {
        Swal.close();
        console.error('‚ùå Fetch error:', err);
        Swal.fire({
          icon: 'error',
          title: 'Server Error',
          text: 'Something went wrong while cancelling the order.',
          confirmButtonColor: '#43593E'
        });
      }
    }
  </script>
</body>
</html>
