<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>My Purchases - Chaploy</title>
  <link rel="stylesheet" href="/stylesheets/homepage.css?v=<%= Date.now() %>">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
  <%- include('./partials/navbar') %>

  <div class="purchases-container">
    <h1>My Purchases</h1>

    <% if (orders.length === 0) { %>
      <p class="empty">You have no orders yet.</p>
    <% } else { %>
      <table class="purchases-table">
        <thead>
          <tr>
            <th>Order ID</th>
            <th>Date</th>
            <th>Total</th>
            <th>Payment</th>
            <th>Status</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
        <% orders.forEach(order => { %>
        <tr>
            <td><%= order.order_id.toString().padStart(4, '0') %></td>
            <td><%= order.order_date %></td>
            <td>$<%= order.total.toLocaleString('en-US', { minimumFractionDigits: 2 }) %></td>
            <td>
            <% if (order.payment_status === 'paid') { %>
                <span class="badge paid">Paid</span>
            <% } else { %>
                <span class="badge pending">Pending</span>
            <% } %>
            </td>
            <td>
            <% if (order.order_status === 'pending') { %>
                <span class="badge pending">Pending</span>
            <% } else if (order.order_status === 'confirmed') { %>
                <span class="badge confirmed">Confirmed</span>
            <% } else if (order.order_status === 'shipped') { %>
                <span class="badge shipped">Shipped</span>
            <% } else if (order.order_status === 'delivered') { %>
                <span class="badge delivered">Delivered</span>
            <% } else if (order.order_status === 'cancelled') { %>
                <span class="badge cancelled">Cancelled</span>
            <% } %>
            </td>
            <td class="actions">
            <button class="btn-view" onclick="viewOrder(<%= order.order_id %>)">View</button>

            <% if (order.order_status.toLowerCase() === 'pending') { %>
                <button class="btn-cancel" onclick="cancelOrder(<%= order.order_id %>)">Cancel</button>
            <% } else { %>
                <button class="btn-disabled" onclick="cannotCancel()">Cancel</button>
            <% } %>
            </td>
        </tr>
        <% }); %>
        </tbody>
      </table>
    <% } %>
  </div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
async function viewOrder(orderId) {
  try {
    const res = await fetch(`/purchases/items/${orderId}`);
    const data = await res.json();

    if (!data.success) {
      return Swal.fire({
        icon: 'info',
        title: 'No items found',
        text: data.message || 'This order does not contain any products.',
        confirmButtonColor: '#43593E'
      });
    }

    let total = 0;
    const html = `
      <div style="max-height:400px;overflow-y:auto;text-align:left;">
        ${data.items.map(it => {
          const line = (it.subtotal != null ? parseFloat(it.subtotal) : (parseFloat(it.unit_price) * parseInt(it.quantity,10))) || 0;
          total += line;
          return `
            <div style="display:flex;align-items:center;margin-bottom:10px;">
              <img src="${it.image}" alt="${it.name}"
                   style="width:60px;height:60px;border-radius:10px;margin-right:10px;object-fit:cover;">
              <div>
                <strong>${it.name}</strong><br>
                Quantity: ${it.quantity}<br>
                Price: $${line.toFixed(2)}
              </div>
            </div>
          `;
        }).join('')}
        <hr style="margin:10px 0;">
        <div style="text-align:right;font-weight:700;">Total: $${total.toFixed(2)}</div>
      </div>
    `;

    Swal.fire({
      title: 'Order Details',
      html,
      width: 600,
      confirmButtonText: 'OK',
      confirmButtonColor: '#43593E'
    });
  } catch (e) {
    console.error(e);
    Swal.fire({
      icon: 'error',
      title: 'Server Error',
      text: 'Failed to load order details.',
      confirmButtonColor: '#43593E'
    });
  }
}

// cancle

async function cancelOrder(orderId) {
  const result = await Swal.fire({
    title: 'Cancel this order?',
    text: 'Are you sure you want to cancel this order?',
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#43593E',
    cancelButtonColor: '#888',
    confirmButtonText: 'Yes, cancel it'
  });

  if (!result.isConfirmed) return;

  try {
    const res = await fetch(`/purchases/cancel/${orderId}`, { method: 'POST' });
    const data = await res.json();

    if (data.success) {
      Swal.fire({
        icon: 'success',
        title: 'Order Cancelled',
        text: 'Please contact support for refund within 3â€“5 business days.',
        confirmButtonColor: '#43593E'
      }).then(() => window.location.reload());
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: data.message || 'Failed to cancel this order.',
        confirmButtonColor: '#43593E'
      });
    }
  } catch (err) {
    Swal.fire({
      icon: 'error',
      title: 'Server Error',
      text: 'Something went wrong while cancelling the order.',
      confirmButtonColor: '#43593E'
    });
  }
}
function cannotCancel() {
  Swal.fire({
    icon: 'info',
    title: 'Cannot Cancel',
    text: 'This order has already been confirmed or cancelled.',
    confirmButtonColor: '#43593E'
  });
}
</script>
</body>
</html>
